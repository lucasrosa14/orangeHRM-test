name: Playwright Tests Pipeline

on:
  push:
    branches: [main]

jobs:
  install:
    name: ‚úÖ Instalar depend√™ncias
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: ‚¨áÔ∏è Checkout c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: üì¶ Instalar depend√™ncias
        run: npm ci

  test:
    name: üß™ Rodar testes com Playwright
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: ‚¨áÔ∏è Checkout c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: üì¶ Instalar depend√™ncias
        run: npm ci

      - name: üß™ Instalar navegadores do Playwright
        run: npx playwright install

      - name: üß™ Rodar testes
        run: npx playwright test

      - name: üì§ Upload do resultado (Allure Results)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

  report:
    name: üìä Gerar & Publicar Allure Report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ‚¨áÔ∏è Checkout c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: üì¶ Instalar depend√™ncias
        run: npm ci

      - name: üì• Baixar artefatos
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: üìä Gerar relat√≥rio Allure com hist√≥rico
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          mkdir -p ./allure-report/$TIMESTAMP
          npx allure generate ./allure-results --clean -o ./allure-report/$TIMESTAMP

      - name: üßæ Gerar index.html estilizado com hist√≥rico
        run: |
          REPORT_DIR=./allure-report
          INDEX_FILE=$REPORT_DIR/index.html
                echo "<!DOCTYPE html>" > $INDEX_FILE
          echo "<html lang='pt-BR'>" >> $INDEX_FILE
          echo "<head>" >> $INDEX_FILE
          echo "  <meta charset='UTF-8'>" >> $INDEX_FILE
          echo "  <meta name='viewport' content='width=device-width, initial-scale=1.0'>" >> $INDEX_FILE
          echo "  <title>Hist√≥rico de Relat√≥rios Allure</title>" >> $INDEX_FILE
          echo "  <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>" >> $INDEX_FILE
          echo "  <style>" >> $INDEX_FILE
          echo "    body { font-family: 'Segoe UI', sans-serif; background-color: #f4f4f9; color: #333; padding: 2rem; }" >> $INDEX_FILE
          echo "    h1 { color: #2c3e50; text-align: center; }" >> $INDEX_FILE
          echo "    input[type='text'] { width: 100%; max-width: 300px; padding: 0.5rem; margin: 1rem auto; display: block; border: 1px solid #ccc; border-radius: 5px; }" >> $INDEX_FILE
          echo "    ul { list-style: none; padding: 0; max-width: 600px; margin: auto; }" >> $INDEX_FILE
          echo "    li { margin: 0.5rem 0; cursor: pointer; }" >> $INDEX_FILE
          echo "    a { text-decoration: none; color: #3498db; font-size: 1.1rem; }" >> $INDEX_FILE
          echo "    a:hover { text-decoration: underline; }" >> $INDEX_FILE
          echo "    .highlight { font-weight: bold; color: #e74c3c; }" >> $INDEX_FILE
          echo "    .footer { margin-top: 2rem; font-size: 0.9rem; text-align: center; color: #777; }" >> $INDEX_FILE
          echo "    .chart-container { width: 80%; margin: 20px auto; }" >> $INDEX_FILE
          echo "    .collapsible { background-color: #f1f1f1; padding: 10px; cursor: pointer; border-radius: 5px; }" >> $INDEX_FILE
          echo "    .content { padding-left: 20px; display: none; }" >> $INDEX_FILE
          echo "    .active .content { display: block; }" >> $INDEX_FILE
          echo "  </style>" >> $INDEX_FILE
          echo "</head>" >> $INDEX_FILE
          echo "<body>" >> $INDEX_FILE
          echo "  <h1>üìä Hist√≥rico de Relat√≥rios Allure</h1>" >> $INDEX_FILE
          echo "  <input type='text' id='search' placeholder='Filtrar por data ou hora... (ex: 2025-04-16_14)' />" >> $INDEX_FILE
          echo "  <div class='chart-container'>" >> $INDEX_FILE
          echo "    <canvas id='statusChart'></canvas>" >> $INDEX_FILE
          echo "  </div>"
          echo "  <ul id='report-list'>" >> $INDEX_FILE
                LATEST_DIR=$(ls -1 $REPORT_DIR | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}$' | sort -r | head -n 1)
                STATUS_DATA=''
                for dir in $(ls -1 $REPORT_DIR | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}$' | sort -r); do
            SUMMARY_FILE="$REPORT_DIR/$dir/widgets/summary.json"
            if [ -f "$SUMMARY_FILE" ]; then
              PASSED=$(jq '.statistic.passed' "$SUMMARY_FILE")
              FAILED=$(jq '.statistic.failed' "$SUMMARY_FILE")
              BROKEN=$(jq '.statistic.broken' "$SUMMARY_FILE")
              SKIPPED=$(jq '.statistic.skipped' "$SUMMARY_FILE")
              PREVIEW="‚úÖ $PASSED | ‚ùå $FAILED | ‚ö†Ô∏è $BROKEN | ‚è∏Ô∏è $SKIPPED"

              # Prepare chart data
              STATUS_DATA="$STATUS_DATA { label: '$dir', data: [$PASSED, $FAILED, $BROKEN, $SKIPPED], backgroundColor: ['#2ecc71', '#e74c3c', '#f39c12', '#7f8c8d'] },"
            else
              PREVIEW="‚ö†Ô∏è Sem dados"
            fi
                  if [ "$dir" = "$LATEST_DIR" ]; then
              echo "    <li class='collapsible active'><a href='./$dir/index.html' class='highlight'>üÜï $dir ‚Äì $PREVIEW</a>" >> $INDEX_FILE
            else
              echo "    <li class='collapsible'><a href='./$dir/index.html'>üìÖ $dir ‚Äì $PREVIEW</a>" >> $INDEX_FILE
            fi
            echo "      <div class='content'>" >> $INDEX_FILE
            echo "        <ul>" >> $INDEX_FILE
            echo "          <li>Status: $PREVIEW</li>" >> $INDEX_FILE
            echo "        </ul>" >> $INDEX_FILE
            echo "      </div>" >> $INDEX_FILE
            echo "    </li>" >> $INDEX_FILE
          done
                echo "  </ul>" >> $INDEX_FILE
          echo "  <div class='footer'>√öltima atualiza√ß√£o: $(date -u)</div>" >> $INDEX_FILE
                echo "  <script>" >> $INDEX_FILE
          echo "    const searchInput = document.getElementById('search');" >> $INDEX_FILE
          echo "    const reportList = document.getElementById('report-list');" >> $INDEX_FILE
          echo "    searchInput.addEventListener('input', () => {" >> $INDEX_FILE
          echo "      const value = searchInput.value.toLowerCase();" >> $INDEX_FILE
          echo "      const items = reportList.getElementsByTagName('li');" >> $INDEX_FILE
          echo "      Array.from(items).forEach(item => {" >> $INDEX_FILE
          echo "        const text = item.textContent.toLowerCase();" >> $INDEX_FILE
          echo "        item.style.display = text.includes(value) ? '' : 'none';" >> $INDEX_FILE
          echo "      });" >> $INDEX_FILE
          echo "    });" >> $INDEX_FILE
          echo "    const coll = document.getElementsByClassName('collapsible');" >> $INDEX_FILE
          echo "    Array.from(coll).forEach((item) => {" >> $INDEX_FILE
          echo "      item.addEventListener('click', function() {" >> $INDEX_FILE
          echo "        this.classList.toggle('active');" >> $INDEX_FILE
          echo "        const content = this.querySelector('.content');" >> $INDEX_FILE
          echo "        content.style.display = content.style.display === 'block' ? 'none' : 'block';" >> $INDEX_FILE
          echo "      });" >> $INDEX_FILE
          echo "    });" >> $INDEX_FILE
                 echo "    const ctx = document.getElementById('statusChart').getContext('2d');" >> $INDEX_FILE
          echo "    new Chart(ctx, {" >> $INDEX_FILE
          echo "      type: 'bar'," >> $INDEX_FILE
          echo "      data: {" >> $INDEX_FILE
          echo "        labels: ['Passed', 'Failed', 'Broken', 'Skipped'],"
          echo "        datasets: [$STATUS_DATA]"
          echo "      },"
          echo "      options: {" >> $INDEX_FILE
          echo "        responsive: true," >> $INDEX_FILE
          echo "        plugins: {" >> $INDEX_FILE
          echo "          legend: { position: 'top' },"
          echo "        }," >> $INDEX_FILE
          echo "      }" >> $INDEX_FILE
          echo "    });" >> $INDEX_FILE
          echo "  </script>" >> $INDEX_FILE
          echo "</body></html>" >> $INDEX_FILE
        
      - name: üöÄ Deploy no GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          user_name: 'GitHub Actions'
          user_email: 'actions@github.com'
