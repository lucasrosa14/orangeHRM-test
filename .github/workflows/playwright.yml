name: Playwright Tests Pipeline

on:
  push:
    branches: [main]

jobs:
  install:
    name: ✅ Instalar dependências
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Instalar dependências
        run: npm ci

  test:
    name: 🧪 Rodar testes com Playwright
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 🧪 Instalar navegadores do Playwright
        run: npx playwright install

      - name: 🧪 Rodar testes
        run: npx playwright test

      - name: 📤 Upload do resultado (Allure Results)
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

  report:
    name: 📊 Gerar & Publicar Allure Report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Instalar dependências
        run: npm ci

      - name: 📥 Baixar artefatos
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: 📊 Gerar relatório Allure com histórico
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          mkdir -p ./allure-report/$TIMESTAMP
          npx allure generate ./allure-results --clean -o ./allure-report/$TIMESTAMP

      - name: 🧾 Gerar index.html estilizado com histórico
        run: |
          REPORT_DIR=./allure-report
          INDEX_FILE=$REPORT_DIR/index.html
                  echo "<!DOCTYPE html>" > $INDEX_FILE
          echo "<html lang='pt-BR'>" >> $INDEX_FILE
          echo "<head>" >> $INDEX_FILE
          echo "  <meta charset='UTF-8'>" >> $INDEX_FILE
          echo "  <meta name='viewport' content='width=device-width, initial-scale=1.0'>" >> $INDEX_FILE
          echo "  <title>Histórico de Relatórios Allure</title>" >> $INDEX_FILE
          echo "  <style>" >> $INDEX_FILE
          echo "    body { font-family: 'Segoe UI', sans-serif; background-color: #f4f4f9; color: #333; padding: 2rem; }" >> $INDEX_FILE
          echo "    h1 { color: #2c3e50; text-align: center; }" >> $INDEX_FILE
          echo "    input[type='text'] { width: 100%; max-width: 300px; padding: 0.5rem; margin: 1rem auto; display: block; border: 1px solid #ccc; border-radius: 5px; }" >> $INDEX_FILE
          echo "    ul { list-style: none; padding: 0; max-width: 600px; margin: auto; }" >> $INDEX_FILE
          echo "    li { margin: 0.5rem 0; }" >> $INDEX_FILE
          echo "    a { text-decoration: none; color: #3498db; font-size: 1.1rem; }" >> $INDEX_FILE
          echo "    a:hover { text-decoration: underline; }" >> $INDEX_FILE
          echo "    .highlight { font-weight: bold; color: #e74c3c; }" >> $INDEX_FILE
          echo "    .footer { margin-top: 2rem; font-size: 0.9rem; text-align: center; color: #777; }" >> $INDEX_FILE
          echo "  </style>" >> $INDEX_FILE
          echo "</head>" >> $INDEX_FILE
          echo "<body>" >> $INDEX_FILE
          echo "  <h1>📊 Histórico de Relatórios Allure</h1>" >> $INDEX_FILE
          echo "  <input type='text' id='search' placeholder='Filtrar por data ou hora... (ex: 2025-04-16_14)' />" >> $INDEX_FILE
          echo "  <ul id='report-list'>" >> $INDEX_FILE
                  LATEST_DIR=$(ls -1 $REPORT_DIR | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}$' | sort -r | head -n 1)
                  for dir in $(ls -1 $REPORT_DIR | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}$' | sort -r); do
            SUMMARY_FILE="$REPORT_DIR/$dir/widgets/summary.json"
            if [ -f "$SUMMARY_FILE" ]; then
              PASSED=$(jq '.statistic.passed' "$SUMMARY_FILE")
              FAILED=$(jq '.statistic.failed' "$SUMMARY_FILE")
              BROKEN=$(jq '.statistic.broken' "$SUMMARY_FILE")
              SKIPPED=$(jq '.statistic.skipped' "$SUMMARY_FILE")
              PREVIEW="✅ $PASSED | ❌ $FAILED | ⚠️ $BROKEN | ⏸️ $SKIPPED"
            else
              PREVIEW="⚠️ Sem dados"
            fi
                    if [ "$dir" = "$LATEST_DIR" ]; then
              echo "    <li><a href='$dir/index.html' class='highlight'>🆕 $dir – $PREVIEW</a></li>" >> $INDEX_FILE
            else
              echo "    <li><a href='$dir/index.html'>📅 $dir – $PREVIEW</a></li>" >> $INDEX_FILE
            fi
          done
                  echo "  </ul>" >> $INDEX_FILE
          echo "  <div class='footer'>Última atualização: $(date -u)</div>" >> $INDEX_FILE
          echo "  <script>" >> $INDEX_FILE
          echo "    const searchInput = document.getElementById('search');" >> $INDEX_FILE
          echo "    const reportList = document.getElementById('report-list');" >> $INDEX_FILE
          echo "    searchInput.addEventListener('input', () => {" >> $INDEX_FILE
          echo "      const value = searchInput.value.toLowerCase();" >> $INDEX_FILE
          echo "      const items = reportList.getElementsByTagName('li');" >> $INDEX_FILE
          echo "      Array.from(items).forEach(item => {" >> $INDEX_FILE
          echo "        const text = item.textContent.toLowerCase();" >> $INDEX_FILE
          echo "        item.style.display = text.includes(value) ? '' : 'none';" >> $INDEX_FILE
          echo "      });" >> $INDEX_FILE
          echo "    });" >> $INDEX_FILE
          echo "  </script>" >> $INDEX_FILE
          echo "</body></html>" >> $INDEX_FILE
     
  
      - name: 🚀 Deploy no GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          user_name: 'GitHub Actions'
          user_email: 'actions@github.com'
