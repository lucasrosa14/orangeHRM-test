# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Login tests >> Login with valid credentials
- Location: /home/runner/work/orangeHRM-test/orangeHRM-test/tests/login.spec.ts:6:5

# Error details

```
Error: page.fill: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('input[name="password"]')

    at LoginPage.login (/home/runner/work/orangeHRM-test/orangeHRM-test/pages/LoginPage.ts:16:21)
    at loginWithValidCredentials (/home/runner/work/orangeHRM-test/orangeHRM-test/utils/utils.ts:15:3)
    at /home/runner/work/orangeHRM-test/orangeHRM-test/tests/login.spec.ts:7:7
```

# Page snapshot

```yaml
- img "company-branding"
- heading "Login" [level=5]
- paragraph: "Username : Admin"
- paragraph: "Password : admin123"
- text:  Username
- textbox "Username": Admin
- text:  Password
- textbox "Password"
- button "Login"
- paragraph: Forgot your password?
- link
- link
- link
- link
- paragraph: OrangeHRM OS 5.7
- paragraph:
  - text: © 2005 - 2025
  - link "OrangeHRM, Inc"
  - text: . All rights reserved.
- img "orangehrm-logo"
```

# Test source

```ts
   1 | import { Page } from '@playwright/test';
   2 |
   3 | export class LoginPage {
   4 |   readonly page: Page;
   5 |
   6 |   constructor(page: Page) {
   7 |     this.page = page;
   8 |   }
   9 |
  10 |   async goTo() {
  11 |     await this.page.goto('/web/index.php/auth/login');
  12 |   }
  13 |
  14 |   async login(username: string, password: string) {
  15 |     await this.page.fill('input[name="username"]', username);
> 16 |     await this.page.fill('input[name="password"]', password);
     |                     ^ Error: page.fill: Test timeout of 30000ms exceeded.
  17 |     await this.page.click('button[type="submit"]');
  18 |   }
  19 |
  20 |   async isInvalidCredentials(): Promise<boolean> {
  21 |     return this.page.isVisible("//p[text()='Invalid credentials']");
  22 |   }
  23 |
  24 |   async isRequired(): Promise<boolean> {
  25 |     return this.page.isVisible("//span[text()='Required']");
  26 |   }
  27 | }
  28 |
```